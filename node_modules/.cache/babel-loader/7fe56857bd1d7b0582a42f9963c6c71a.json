{"remainingRequest":"/Library/WebServer/Documents/runju2.0/node_modules/babel-loader/lib/index.js!/Library/WebServer/Documents/runju2.0/src/store/user.js","dependencies":[{"path":"/Library/WebServer/Documents/runju2.0/src/store/user.js","mtime":1543730796350},{"path":"/Library/WebServer/Documents/runju2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/runju2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { login, logout, refresh, getInfo } from '@/api/login';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nconst user = {\n  state: {\n    token: getToken(),\n    name: '',\n    avatar: '',\n    roles: [],\n    id: ''\n  },\n  mutations: {\n    SET_TOKEN: (state, token) => {\n      state.token = token;\n    },\n    SET_NAME: (state, name) => {\n      state.name = name;\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar;\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles;\n    },\n    SET_UID: (state, id) => {\n      state.id = id;\n    }\n  },\n  actions: {\n    // 登录\n    Login({\n      commit\n    }, userInfo) {\n      const mobile = userInfo.phone.trim();\n      return new Promise((resolve, reject) => {\n        login(mobile, userInfo.password).then(response => {\n          //console.log(response)\n          const data = response.data;\n\n          if (response.code == '2000') {\n            setToken(data.token);\n            commit('SET_TOKEN', data.token);\n            commit('SET_UID', data.user.id);\n            commit('SET_NAME', data.user.username);\n          }\n\n          resolve(response);\n        }).catch(error => {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n\n    Refresh({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        refresh(state.token).then(response => {\n          const data = response.data;\n          setToken(data.token);\n          commit('SET_TOKEN', data.token);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    // 获取用户信息\n    GetInfo({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        getInfo(state.token).then(response => {\n          const data = response.data;\n          commit('SET_NAME', data.name);\n          commit('SET_UID', data.id);\n          resolve(response);\n        }, error => {\n          resolve('error');\n        }).catch(error => {//console.log(error)\n        });\n      });\n    },\n\n    // 登出\n    LogOut({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('SET_TOKEN', '');\n          commit('SET_ROLES', []);\n          removeToken();\n          resolve();\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    // 前端 登出\n    FedLogOut({\n      commit\n    }) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', '');\n        removeToken();\n        resolve();\n      });\n    }\n\n  }\n};\nexport default user;",{"version":3,"sources":["/Library/WebServer/Documents/runju2.0/src/store/user.js"],"names":["login","logout","refresh","getInfo","getToken","setToken","removeToken","user","state","token","name","avatar","roles","id","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","SET_UID","actions","Login","commit","userInfo","mobile","phone","trim","Promise","resolve","reject","password","then","response","data","code","username","catch","error","console","log","Refresh","GetInfo","LogOut","FedLogOut"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAgCC,OAAhC,QAA+C,aAA/C;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,cAAhD;AAEA,MAAMC,OAAO;AACXC,SAAO;AACLC,WAAOL,UADF;AAELM,UAAM,EAFD;AAGLC,YAAQ,EAHH;AAILC,WAAO,EAJF;AAKLC,QAAI;AALC,GADI;AASXC,aAAW;AACTC,eAAW,CAACP,KAAD,EAAQC,KAAR,KAAkB;AAC3BD,YAAMC,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITO,cAAU,CAACR,KAAD,EAAQE,IAAR,KAAiB;AACzBF,YAAME,IAAN,GAAaA,IAAb;AACD,KANQ;AAOTO,gBAAY,CAACT,KAAD,EAAQG,MAAR,KAAmB;AAC7BH,YAAMG,MAAN,GAAeA,MAAf;AACD,KATQ;AAUTO,eAAW,CAACV,KAAD,EAAQI,KAAR,KAAkB;AAC3BJ,YAAMI,KAAN,GAAcA,KAAd;AACD,KAZQ;AAaTO,aAAS,CAACX,KAAD,EAAQK,EAAR,KAAe;AACtBL,YAAMK,EAAN,GAAWA,EAAX;AACD;AAfQ,GATA;AA2BXO,WAAS;AACP;AACAC,UAAM;AAAEC;AAAF,KAAN,EAAkBC,QAAlB,EAA4B;AAC1B,YAAMC,SAASD,SAASE,KAAT,CAAeC,IAAf,EAAf;AACA,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC7B,cAAMwB,MAAN,EAAcD,SAASO,QAAvB,EAAiCC,IAAjC,CAAsCC,YAAY;AAC9C;AACF,gBAAMC,OAAOD,SAASC,IAAtB;;AACA,cAAGD,SAASE,IAAT,IAAiB,MAApB,EAA2B;AACzB7B,qBAAS4B,KAAKxB,KAAd;AACAa,mBAAO,WAAP,EAAoBW,KAAKxB,KAAzB;AACAa,mBAAO,SAAP,EAAkBW,KAAK1B,IAAL,CAAUM,EAA5B;AACAS,mBAAO,UAAP,EAAmBW,KAAK1B,IAAL,CAAU4B,QAA7B;AACD;;AACDP,kBAAQI,QAAR;AACD,SAVD,EAUGI,KAVH,CAUSC,SAAS;AAChBC,kBAAQC,GAAR,CAAYF,KAAZ;AACAR,iBAAOQ,KAAP;AACD,SAbD;AAcD,OAfM,CAAP;AAgBD,KApBM;;AAsBPG,YAAQ;AAAElB,YAAF;AAAUd;AAAV,KAAR,EAA2B;AACzB,aAAO,IAAImB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC3B,gBAAQM,MAAMC,KAAd,EAAqBsB,IAArB,CAA0BC,YAAY;AACpC,gBAAMC,OAAOD,SAASC,IAAtB;AACA5B,mBAAS4B,KAAKxB,KAAd;AACAa,iBAAO,WAAP,EAAoBW,KAAKxB,KAAzB;AACAmB,kBAAQI,QAAR;AACD,SALD,EAKGI,KALH,CAKSC,SAAS;AAChBR,iBAAOQ,KAAP;AACD,SAPD;AAQD,OATM,CAAP;AAUD,KAjCM;;AAmCP;AACAI,YAAQ;AAAEnB,YAAF;AAAUd;AAAV,KAAR,EAA2B;AACzB,aAAO,IAAImB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC1B,gBAAQK,MAAMC,KAAd,EAAqBsB,IAArB,CAA0BC,YAAY;AACpC,gBAAMC,OAAOD,SAASC,IAAtB;AACAX,iBAAO,UAAP,EAAmBW,KAAKvB,IAAxB;AACAY,iBAAO,SAAP,EAAkBW,KAAKpB,EAAvB;AACAe,kBAAQI,QAAR;AACD,SALD,EAKEK,SAAO;AACLT,kBAAQ,OAAR;AACH,SAPD,EAOGQ,KAPH,CAOSC,SAAS,CACd;AACH,SATD;AAUD,OAXM,CAAP;AAYD,KAjDM;;AAmDP;AACAK,WAAO;AAAEpB,YAAF;AAAUd;AAAV,KAAP,EAA0B;AACxB,aAAO,IAAImB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC5B,eAAOO,MAAMC,KAAb,EAAoBsB,IAApB,CAAyB,MAAM;AAC7BT,iBAAO,WAAP,EAAoB,EAApB;AACAA,iBAAO,WAAP,EAAoB,EAApB;AACAhB;AACAsB;AACD,SALD,EAKGQ,KALH,CAKSC,SAAS;AAChBR,iBAAOQ,KAAP;AACD,SAPD;AAQD,OATM,CAAP;AAUD,KA/DM;;AAiEP;AACAM,cAAU;AAAErB;AAAF,KAAV,EAAsB;AACpB,aAAO,IAAIK,OAAJ,CAAYC,WAAW;AAC5BN,eAAO,WAAP,EAAoB,EAApB;AACAhB;AACAsB;AACD,OAJM,CAAP;AAKD;;AAxEM;AA3BE,CAAb;AAuGA,eAAerB,IAAf","sourcesContent":["import { login, logout, refresh,getInfo } from '@/api/login'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nconst user = {\n  state: {\n    token: getToken(),\n    name: '',\n    avatar: '',\n    roles: [],\n    id: ''\n  },\n\n  mutations: {\n    SET_TOKEN: (state, token) => {\n      state.token = token\n    },\n    SET_NAME: (state, name) => {\n      state.name = name\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles\n    },\n    SET_UID: (state, id) => {\n      state.id = id\n    }\n  },\n\n  actions: {\n    // 登录\n    Login({ commit }, userInfo) {\n      const mobile = userInfo.phone.trim()\n      return new Promise((resolve, reject) => {\n        login(mobile, userInfo.password).then(response => {\n            //console.log(response)\n          const data = response.data\n          if(response.code == '2000'){\n            setToken(data.token)\n            commit('SET_TOKEN', data.token)\n            commit('SET_UID', data.user.id)\n            commit('SET_NAME', data.user.username)\n          }\n          resolve(response)\n        }).catch(error => {\n          console.log(error)\n          reject(error)\n        })\n      })\n    },\n\n    Refresh({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        refresh(state.token).then(response => {\n          const data = response.data\n          setToken(data.token)\n          commit('SET_TOKEN', data.token)\n          resolve(response)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    // 获取用户信息\n    GetInfo({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        getInfo(state.token).then(response => {\n          const data = response.data\n          commit('SET_NAME', data.name)\n          commit('SET_UID', data.id)\n          resolve(response)\n        },error=>{\n            resolve('error')\n        }).catch(error => {\n            //console.log(error)\n        })\n      })\n    },\n\n    // 登出\n    LogOut({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('SET_TOKEN', '')\n          commit('SET_ROLES', [])\n          removeToken()\n          resolve()\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    // 前端 登出\n    FedLogOut({ commit }) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', '')\n        removeToken()\n        resolve()\n      })\n    }\n  }\n}\n\nexport default user"]}]}